{
  "title": "JavaScript load script dynamically",
  "cells": [
    {
      "type": "text",
      "data": "<div style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; white-space: normal;\">\n<div>Here is code to run a script dynamically added to a web page:</div>\n<div><br/></div>\n<div>Note: the appendChild() runs a script loaded into a web page.</div>\n<div>Then, wait for onreadystatechange and onload to tell when script has finished loading.</div>\n<div>This function does additional checking to see if the script loading is complete.</div>\n<div><br/></div>\n<div><br/></div>\n<div>loadJS(playerScriptFile, function() { </div>\n<div>        // put code here to run after script is loaded</div>\n<div>       playerLoaded();</div>\n<div>});</div>\n<div><br/></div>\n<div>function loadJS(src, callback) {</div>\n<div>      var s = document.createElement('script');</div>\n<div>      s.src = src;</div>\n<div>      s.async = true;</div>\n<div>      s.onreadystatechange = s.onload = function() {</div>\n<div>          var state = s.readyState;</div>\n<div>           if (!callback.done &amp;&amp; (!state || /loaded|complete/.test(state))) {</div>\n<div>                callback.done = true;</div>\n<div>                callback();</div>\n<div>           }</div>\n<div>       };</div>\n<div>      document.getElementsByTagName('head')[0].appendChild(s);</div>\n<div>  }</div>\n</div>"
    }
  ]
}