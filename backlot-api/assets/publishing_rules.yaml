paths:
  /v2/publishing_rules:
    get:
      tags:
        - Publishing rules
      description: View all publishing rules paginated by 100 rows.
      parameters:
        - $ref: '#/components/parameters/ApiKey'
        - $ref: '#/components/parameters/Signature'
        - $ref: '#/components/parameters/Expires'
        - $ref: '#/components/parameters/PaginationOffset'
        - $ref: '#/components/parameters/PaginationPageToken'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        200:
          $ref: '#/components/responses/PublishingRulesArrayResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
    post:
      tags:
        - Publishing rules
      description: Create a publishing rule.
      parameters:
        - $ref: '#/components/parameters/ApiKey'
        - $ref: '#/components/parameters/Signature'
        - $ref: '#/components/parameters/Expires'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePublishingRule_Body'
      responses:
        200:
          $ref: '#/components/responses/PublishingRuleObjectResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /v2/publishing_rules/{rule_id}:
    get:
      tags:
        - Publishing rules
      description: View a publishing rule with specified ID.
      parameters:
        - $ref: '#/components/parameters/PublishingRuleID'
        - $ref: '#/components/parameters/ApiKey'
        - $ref: '#/components/parameters/Signature'
        - $ref: '#/components/parameters/Expires'
      responses:
        200:
          $ref: '#/components/responses/PublishingRuleObjectResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
    patch:
      tags:
        - Publishing rules
      description: Modify a publishing rule specified by an ID.
      parameters:
        - $ref: '#/components/parameters/PublishingRuleID'
        - $ref: '#/components/parameters/ApiKey'
        - $ref: '#/components/parameters/Signature'
        - $ref: '#/components/parameters/Expires'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyPublishingRule_Body'
      responses:
        200:
          $ref: '#/components/responses/PublishingRuleObjectResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
    delete:
      tags:
        - Publishing rules
      description: Delete a specified publishing rule.
      parameters:
        - $ref: '#/components/parameters/PublishingRuleID'
        - $ref: '#/components/parameters/ApiKey'
        - $ref: '#/components/parameters/Signature'
        - $ref: '#/components/parameters/Expires'
      responses:
        200:
          description: OK
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

components:
  parameters:
    PublishingRuleID:
      name: rule_id
      in: path
      schema:
        type: string
      required: true

  schemas:
    CreatePublishingRule_Body:
      type: "object"
      required:
        - name
      properties:
        name:
          type: "string"
          description: The name of your publishing rule.
    ModifyPublishingRule_Body:
      type: "object"
    PublishingRule:
      description: A publishing rule object
      type: object
      properties:
        id:
          type: string
        public_id:
          type: string
        name:
          type: string
        geographic_restrictions:
          type: object
          properties:
            type:
              type: string
            locations:
              type: array
              items:
                type: string
        time_restrictions:
          type: object
          properties:
            start_date:
              type: string
            end_date:
              type: string

  responses:
    PublishingRuleObjectResponse:
      description: A full response for expected json data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PublishingRule'

    PublishingRulesArrayResponse:
      description: A full response for expected json data
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                 $ref: '#/components/schemas/PublishingRule'
