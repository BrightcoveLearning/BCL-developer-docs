openapi: 3.0.0
x-bc-implicit-head: true
x-bc-implicit-options: true
x-bc-upstream: 'http://backend_server'
info:
  title: Playback Rights API Reference
  description: >-
    Reference for the Brightcove Playback Rights API. This API allows you to create, read, update and delete video Playback Rights.

     **Base URL**: https://playback-auth.brightcove.com
  version: 1.0.0
  x-bc-access: public
servers:
  - url: 'https://playback-auth.brightcove.com/v1'
    variables: {}
tags:
  - name: Playback Rights
    description: Operations for creating, reading, updating and deleting video Playback Rights.
paths:
  '/accounts/{accountID}/playback_rights':
    post:
      tags:
        - New Playback Right
      summary: Create a new Playback Right
      description: 'Create a new Playback Right'
      operationId: CreateRight
      security:
        - BC_OAuth2:
          - video-cloud/playback-auth/playback-rights/write
      parameters:
        - name: accountID
          in: path
          description: Video Cloud account ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: Content-Type
          in: header
          description: 'Content-Type: application/json'
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: Authorization
          in: header
          description: 'Authorization: Bearer access_token (see Getting Access Tokens)'
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Create playback right metadata
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybackRight'
      responses:
        '201':
          description: 'Playback right created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybackRightResponse'
        '400':
          description: >-
            BAD_REQUEST: Invalid request Body
        '401':
          description: >-
            UNAUTHORIZED: Authentication failed; check to make sure your policy
            key is correct
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you requested
        '409':
          description: >-
            STATUS_CONFLICT: Something went wrong while trying to update the file
          content:
            text/plain:
              example: "Invalid country: MIX"
        '500':
          description: |-
            UNKNOWN: Issue in Brightcove system; try again later.
            TIMEOUT: Server likely too busy; try again later.
      deprecated: false
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/accounts/{accountID}/playback_rights/{playbackRightsID}':
    get:
      tags:
        - Playback Rights
      summary: Get a specific Playback Right for an account
      description: 'Get a specific Playback Right for an account'
      operationId: GetPlaybackRight
      security:
        - BC_OAuth2:
          - video-cloud/playback-auth/playback-rights/read
      parameters:
        - name: accountID
          in: path
          description: Video Cloud account ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: playbackRightsID
          in: path
          description: Playback Rights ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: Content-Type
          in: header
          description: 'Content-Type: application/json'
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: Authorization
          in: header
          description: 'Authorization: Bearer access_token (see Getting Access Tokens)'
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybackRightResponse'
        '400':
          description: >-
            BAD_REQUEST: Invalid request Body
        '401':
          description: >-
            UNAUTHORIZED: Authentication failed; check to make sure your policy
            key is correct
        '404':
          description: Playback right id was not found
          content:
            text/plain:
              example: "Playback Rights not found"
        '500':
          description: '500'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status500'
      deprecated: false
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      tags:
        - Update Playback Right
      summary: Updates a specific playback right
      description: |-
        Update a specific playback right for an account
      operationId: UpdateRight
      security:
        - BC_OAuth2:
          - video-cloud/playback-auth/playback-rights/write
      parameters:
        - name: accountID
          in: path
          description: Video Cloud account ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: playbackRightsID
          in: path
          description: Playback rights ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: Content-Type
          in: header
          description: 'Content-Type: application/json'
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: Authorization
          in: header
          description: 'Authorization: Bearer access_token (see Getting Access Tokens)'
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlaybackRight"
        '204':
          description: >-
            BAD_REQUEST: No content for successful update
        '400':
          description: Bad Request
          content:
            text/plain:
              example: "Invalid request Body"
        '401':
          description: >-
            UNAUTHORIZED: Authentication failed; check to make sure your policy
            key is correct
        '404':
          description: Playback Right ID was not found
          content:
            text/plain:
              example: "Playback Rights not found"
        "409":
          description: Status Conflict, something went wrong while trying to update the file
          content:
            text/plain:
              example: "Invalid country: MIX"
        '500':
          description: |-
            UNKNOWN: Issue in Brightcove system; try again later.
            TIMEOUT: Server likely too busy; try again later.
      deprecated: false
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      tags:
        - Playback Config
      summary: Delete a behavior for an account
      description: 'Delete a behavior for an account.'
      operationId: DeleteBehavior
      security:
        - BC_OAuth2:
          - video-cloud/playback-auth/audit
      parameters:
        - name: accountID
          in: path
          description: Video Cloud account ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: id
          in: path
          description: A unique ID associated with a behavior defined for an account
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: Content-Type
          in: header
          description: 'Content-Type: application/json'
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: Authorization
          in: header
          description: 'Authorization: Bearer access_token (see Getting Access Tokens)'
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: 'SUCCESS: The specified behavior has been deleted'
        '400':
          description: >-
            NOT_AVAILABLE: The resource you are requesting is temporarily unavailable
        '401':
          description: >-
            UNAUTHORIZED: Authentication failed; check to make sure your policy
            key is correct
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you requested
        '500':
          description: |-
            UNKNOWN: Issue in Brightcove system; try again later.
            TIMEOUT: Server likely too busy; try again later.
      deprecated: false
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/accounts/{accountID}/behavior/{id}/versions':
    get:
      tags:
        - Playback Config
      summary: Get all versions of a behavior for an account
      description: 'Get all versions of a behavior defined for an account.'
      operationId: GetAllBehaviorVersions
      security:
        - BC_OAuth2:
          - video-cloud/playback-auth/audit
      parameters:
        - name: accountID
          in: path
          description: Video Cloud account ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: id
          in: path
          description: A unique ID associated with a behavior defined for an account
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: Content-Type
          in: header
          description: 'Content-Type: application/json'
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: Authorization
          in: header
          description: 'Authorization: Bearer access_token (see Getting Access Tokens)'
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllBehaviorVersionsResponse'
        '400':
          description: >-
            NOT_AVAILABLE: The resource you are requesting is temporarily unavailable
        '401':
          description: >-
            UNAUTHORIZED: Authentication failed; check to make sure your policy
            key is correct
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you requested
        '500':
          description: |-
            UNKNOWN: Issue in Brightcove system; try again later.
            TIMEOUT: Server likely too busy; try again later.
      deprecated: false
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

components:
  schemas:
    PlaybackRight:
      title:  Add Behavior Response
      type: object
      properties:
        account_id:
          type: string
          description: Unique identifier for your account
          readOnly: true
        id:
          type: string
          description: Unique identifier for a behavior
          readOnly: true
        version:
          type: integer
          description: Version for the behavior
          readOnly: true
        created_at:
          type: string
          description: Date timestamp for when the behavior was added
          readOnly: true
        updated_at:
          type: string
          description: Date timestamp for when the behavior was last updated
          readOnly: true
        behaviors:
          type: array
          description: Array of behavior mappings
          readOnly: true
          items:
            $ref: '#/components/schemas/behavior'
      example: {
          "account_id": "account1",
          "id" : "5068abcde-f710-4e36-be95-1234567890",
          "version": 0,
          "created_at": "2018-08-07T20:49:39.12750454Z",
          "updated_at": "2018-08-07T20:49:39.12750454Z",
          "behaviors":  [
            {
              "name" : "MaxBitrate5000foriPhone",
              "conditions": {
     	          "device_group": ["iphone"]
              },
              "delivery_rule": ["max-bitrate-5000"]
            },
            {
              "name": "iphone8X-codecs",
              "conditions": {
                "device_group": ["iphone8","iphoneX"]
              },
              "delivery_rule": ["hevc-avc"]
            }]
          }
    behavior:
      properties:
        name:
          type: string
          description: 'Behavior name'
          readOnly: true
        conditions:
          type: object
          description: 'Behavior conditions'
          readOnly: true
          properties:
            device_group:
              type: array
              readOnly: true
              items:
                enum:
                  - android
                  - appletv
                  - ipad
                  - iphone
                  - desktop-chrome
                  - desktop-firfox
                  - desktop-safari
                  - fetchtv
                  - ios-other
                  - roku-7/8
                  - smartphone-generic
                  - tablet-android
                  - tablet-kindle
                  - unknown
                example: iphone
            geography:
              type: array
              readOnly: true
              items:
                enum:
                  - continent
                  - country
        delivery_rule:
          type: array
          description: Delivery rule
          readOnly: true
          items:
            enum:
              - max-bitrate-5000
              - hevc-avc
              - minimum video bitrate
              - maximum video bitrate
              - minimum video resolution
              - maximum video resolution
              - maximum number of audio renditions
              - maximum number of video renditions
              - first video bitrate
              - discontinuities
    PlaybackRightResponse:
      title:  Get Latest Behaviors Response
      type: object
      properties:
        account_id:
          type: string
          description: Unique identifier for your account
          readOnly: true
        id:
          type: string
          description: Unique identifier for a behavior
          readOnly: true
        version:
          type: integer
          description: Version for the behavior
          readOnly: true
        created_at:
          type: string
          description: Date timestamp for when the behavior was added
          readOnly: true
        updated_at:
          type: string
          description: Date timestamp for when the behavior was last updated
          readOnly: true
        behaviors:
          type: array
          description: Array of behavior mappings
          readOnly: true
          items:
            $ref: '#/components/schemas/behavior'
      example: {
          "account_id": "account1",
          "id" : "5068abcde-f710-4e36-be95-1234567890",
          "version": 0,
          "created_at": "2019-08-07T20:49:39.12750454Z",
          "updated_at": "2019-08-07T20:49:39.12750454Z",
          "behaviors":  [
            {
              "name" : "MaxBitrate5000foriPhone",
              "conditions": {
     	          "device_group": ["iphone"]
              },
              "delivery_rule": ["max-bitrate-5000"]
            },
            {
              "name": "iphone8X-codecs",
              "conditions": {
                "device_group": ["iphone8","iphoneX"]
              },
              "delivery_rule": ["hevc-avc"]
            }]
          }
    GetAllBehaviorVersionsResponse:
      title:  Get All Versions for a Behavior Response
      type: array
      properties:
        account_id:
          type: string
          description: Unique identifier for your account
          readOnly: true
        id:
          type: string
          description: Unique identifier for a behavior
          readOnly: true
        version:
          type: integer
          description: Version for the behavior
          readOnly: true
        created_at:
          type: string
          description: Date timestamp for when the behavior was added
          readOnly: true
        updated_at:
          type: string
          description: Date timestamp for when the behavior was last updated
          readOnly: true
        behaviors:
          type: array
          description: Array of behavior mappings
          readOnly: true
          items:
            $ref: '#/components/schemas/behavior'
      example: [
        {
          "account_id": "account1",
          "id" : "5068abcde-f710-4e36-be95-1234567890",
          "version": 0,
          "created_at": "2019-08-07T20:49:39.12750454Z",
          "updated_at": "2019-08-07T20:49:39.12750454Z",
          "behaviors":  [
            {
              "name" : "MaxBitrate5000foriPhone",
              "conditions": {
     	          "device_group": ["iphone"]
              },
              "delivery_rule": ["max-bitrate-5000"]
            }]
        },
        {
          "account_id": "account1",
          "id" : "5068abcde-f710-4e36-be95-1234567890",
          "version": 0,
          "created_at": "2019-08-07T20:49:39.12750454Z",
          "updated_at": "2019-08-07T20:49:39.12750454Z",
          "behaviors":  [
            {
              "name" : "MaxBitrate5000foriPhone",
              "conditions": {
     	          "device_group": ["iphone"]
              },
              "delivery_rule": ["max-bitrate-5000"]
            },
            {
              "name": "iphone8X-codecs",
              "conditions": {
                "device_group": ["iphone8","iphoneX"]
              },
              "delivery_rule": ["hevc-avc"]
            }]
        }]
    UpdateBehaviorResponse:
      title:  Update a behavior Response
      type: object
      properties:
        account_id:
          type: string
          description: Unique identifier for your account
          readOnly: true
        id:
          type: string
          description: Unique identifier for a behavior
          readOnly: true
        version:
          type: integer
          description: Version for the behavior
          readOnly: true
        created_at:
          type: string
          description: Date timestamp for when the behavior was added
          readOnly: true
        updated_at:
          type: string
          description: Date timestamp for when the behavior was last updated
          readOnly: true
        behaviors:
          type: array
          description: Array of behavior mappings
          readOnly: true
          items:
            $ref: '#/components/schemas/behavior'
      example: {
          "account_id": "account1",
          "id" : "5068abcde-f710-4e36-be95-1234567890",
          "version": 2,
          "created_at": "2019-08-07T20:49:39.12750454Z",
          "updated_at": "2019-08-07T20:49:39.12750454Z",
          "behaviors":  [
            {
              "name" : "MaxBitrate5000foriPhone",
              "conditions": {
     	          "device_group": ["iphone"]
              },
              "delivery_rule": ["max-bitrate-5000"]
            },
            {
              "name": "iphone8X-codecs",
              "conditions": {
                "device_group": ["iphone8","iphoneX"]
              },
              "delivery_rule": ["hevc-avc"]
            }]
          }
    RequestResponse:
      title:  Request Response
      type: object
      properties:
        execution_id:
          type: string
          description: >-
            A unique ID associated with a usage report for a specified accountID and date
      example: {
          "execution_id": "b123456e-1234-4e91-b123-123456d1234"
          }
    FetchResponse:
      title:  Fetch Response
      type: object
      description: The results are returned as an S3 URL that you can download
      properties:
        report_url:
          type: string
          description: The results are returned as an S3 URL that you can download
        expiration_time:
          type: integer
          description: Epoch Timestamp. Signed S3 URLs are valid for 15 minutes
      example: {
          "report_url": "https://site.com/audit-reports-storage/b123456.csv?X-Algorithm=1234567890",
          "expiration_time": 1557324256
          }
    Status200:
      title:  Status Response 200
      type: object
      description: The status returned from a report query
      properties:
        state:
          type: string
          description: The status returned from a report query.
          enum:
            - "SUCCEEDED"
            - "processing"
            - "failed"
      example: {
          "state": "SUCCEEDED"
          }
    Status400:
      title:  Status Response 400
      type: object
      description: The status returned from a report query
      properties:
        state:
          type: string
          description: The status returned from a report query.
      example: {
          "status": "failed",
          "message": "Error executing status for execution_id"
          }
    Status500:
      title:  Status Response 500
      type: object
      description: The status returned from a report query
      properties:
        state:
          type: string
          description: The status returned from a report query.
      example: {
          "status": "failed",
          "message": "Internal Server Error"
          }
  parameters:
    account_id:
      name: account_id
      in: path
      description: 'Unique identifier for your account'
      required: true
      schema:
        type: string
  securitySchemes:
    BC_OAuth2:
      type: oauth2
      description: >-
        Brightcove OAuth API. See the [support documentation](https://support.brightcove.com/oauth-api) or [Getting Access Tokens](https://support.brightcove.com/oauth-api-sample-get-access-token) to learn more
      flows:
        clientCredentials:
          tokenUrl: 'https://oauth.brightcove.com/v4/access_token'
          scopes:
            video-cloud/playback-auth/audit: Request, check status and fetch daily usage report
