openapi: 3.0.0
x-bc-implicit-head: true
x-bc-implicit-options: true
x-bc-upstream: 'http://backend_server'
info:
  title: Blacklist API Reference
  description: >-
    Reference for the Brightcove Blacklist API. This API allows you to blacklist tokens so that they will not be considered valid for license requests when using Brightcove's [Playback Authorization Service](https://docs.brightcove.com/en/staging/pas/overview-playback-authorization-service.html).

     **Base URL**: https://playback-auth.api.brightcove.com
  version: 1.0.0
  x-bc-access: public
servers:
  - url: 'https://playback-auth.api.brightcove.com/v1'
    variables: {}
tags:
  - name: Blacklist
    description: Operations for adding a token to the blacklist and showing the current blacklist.
paths:
  '/accounts/{accountID}/blacklist/tokens/{token}':
    put:
      tags:
        - Blacklist
      summary: Add a token to the blacklist
      description: |-
        Add a token to the blacklist to invalidate for license requests when using Brightcove's Playback Authorization Service
      operationId: RequestReport
      security:
        - BC_OAuth2:
          - video-cloud/playback-auth/audit
      parameters:
        - name: accountID
          in: path
          description: Video Cloud account ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: token
          in: path
          description: The entire encoded JWT string is included in the path.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: Content-Type
          in: header
          description: 'Content-Type: application/json'
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: Authorization
          in: header
          description: 'Authorization: Bearer access_token (see Getting Access Tokens)'
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestResponse'
        '400':
          description: >-
            NOT_AVAILABLE: The resource you are requesting is temporarily unavailable
        '401':
          description: >-
            UNAUTHORIZED: Authentication failed; check to make sure your policy
            key is correct
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you requested
        '500':
          description: |-
            UNKNOWN: Issue in Brightcove system; try again later.
            TIMEOUT: Server likely too busy; try again later.
      deprecated: false
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/accounts/{accountID}/execution/{executionID}/status':
    get:
      tags:
        - Audit
      summary: Check usage report status
      description: 'Check the status of your usage report request'
      operationId: CheckStatus
      security:
        - BC_OAuth2:
          - video-cloud/playback-auth/audit
      parameters:
        - name: accountID
          in: path
          description: Video Cloud account ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: executionID
          in: path
          description: A unique ID associated with a usage report for a specified accountID and date
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: Content-Type
          in: header
          description: 'Content-Type: application/json'
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: Authorization
          in: header
          description: 'Authorization: Bearer access_token (see Getting Access Tokens)'
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status200'
        '400':
          description: '400'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status400'
        '401':
          description: >-
            UNAUTHORIZED: Authentication failed; check to make sure your policy
            key is correct
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you requested
        '500':
          description: '500'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status500'
      deprecated: false
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/accounts/{accountID}/execution/{executionID}/report':
    get:
      tags:
        - Audit
      summary: Fetch usage report
      description: 'Fetch your daily usage report'
      operationId: FetchReport
      security:
        - BC_OAuth2:
          - video-cloud/playback-auth/audit
      parameters:
        - name: accountID
          in: path
          description: Video Cloud account ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: executionID
          in: path
          description: A unique ID associated with a usage report for a specified accountID and date
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: Content-Type
          in: header
          description: 'Content-Type: application/json'
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: Authorization
          in: header
          description: 'Authorization: Bearer access_token (see Getting Access Tokens)'
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchResponse'
        '400':
          description: >-
            NOT_AVAILABLE: The resource you are requesting is temporarily unavailable
        '401':
          description: >-
            UNAUTHORIZED: Authentication failed; check to make sure your policy
            key is correct
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you requested
        '500':
          description: |-
            UNKNOWN: Issue in Brightcove system; try again later.
            TIMEOUT: Server likely too busy; try again later.
      deprecated: false
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
components:
  schemas:
    RequestResponse:
      title:  Request Response
      required:
        - executionID
      type: string
      description: A unique ID associated with a usage report for a specified accountID and date
      properties:
        executionID:
          type: string
          description: A unique ID associated with a usage report for a specified accountID and date
      example: >-
        {
          "executionID": "abcdef-asfdag-dvsbcd"
        }
    FetchResponse:
      title:  Fetch Response
      required:
        - signedURL
        - expirationTime
      type: string
      description: The results are returned as an S3 URL that you can download
      properties:
        signedURL:
          type: string
          description:
            The results are returned as an S3 URL that you can download
        expirationTime:
          type: integer
          description:
            Epoch Timestamp, Signed S3 URLs are valid for 15 minutes
      example: >-
        {
          "signedURL": "http://signed-url",
          "expirationTime": 1569219842
        }
    Status200:
      title:  Status Response 200
      required:
        - status
      type: string
      description: The status returned from a report query
      properties:
        status:
          type: string
          description: The status returned from a report query.
          enum:
            - "completed"
            - "processing"
            - "failed"
      example: >-
        '{
          "status": "completed"
        }'
    Status400:
      title:  Status Response 400
      required:
        - status
      type: string
      description: The status returned from a report query
      properties:
        status:
          type: string
          description: The status returned from a report query.
      example: >-
        {
          "status": "failed",
          "message": "Error executing status for executionID"
        }
    Status500:
      title:  Status Response 500
      required:
        - status
      type: string
      description: The status returned from a report query
      properties:
        status:
          type: string
          description: The status returned from a report query.
      example: >-
        {
          "status": "failed",
          "message": "Internal Server Error"
        }
  securitySchemes:
    BC_OAuth2:
      type: oauth2
      description: >-
        Brightcove OAuth API. See the [support documentation](https://support.brightcove.com/oauth-api) or [Getting Access Tokens](https://support.brightcove.com/oauth-api-sample-get-access-token) to learn more
      flows:
        clientCredentials:
          tokenUrl: 'https://oauth.brightcove.com/v4/access_token'
          scopes:
            video-cloud/playback-auth/audit: Request, check status and fetch daily usage report
