openapi: '3.0.0'
x-bc-implicit-head: true
x-bc-implicit-options: true
x-bc-upstream: 'http://backend_server'
info:
  description: |-
    API for Brightcove SSAI

    This API is used for managing operations related to Server-Side Ad Insertion (SSAI)

    **Base URL:** https://ssai.api.brightcove.com/v1
  version: 0.1.0
  title: Brightcove SSAI API
  x-bc-access: public
servers:
  - url: 'https://ssai.api.brightcove.com/v1'
    variables: {}
tags:
  - name: Ad Configurations
    description: Operations for managing ad configurations.
paths:
  '/accounts/{account_id}/ssai_configs':
    get:
      tags:
        - Ad Configurations
      summary: List the ad configurations for the account
      description: |-
        List the ad configurations defined for an account.
      operationId: getAdConfigurations
      security:
        - BC_OAuth2:
          - video-cloud/social/video/read
      parameters:
        - $ref: '#/components/parameters/AccountId'
      responses:
        '200':
          description: A list of videos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdConfigList'
        '403':
          description: Forbidden
        '422':
          description: Invalid query parameters
        '500':
          description: Server error
  '/accounts/{account_id}/videos/{video_id}/status':
    get:
      tags:
        - Status
      summary: List the current status for the video.
      description: >-
        Gets the current status of the requested video for every Social Destination is has ever been distributed to.  Note that this endpoint has pagination.
      operationId: getAccountVideoStatus
      security:
        - BC_OAuth2:
          - video-cloud/social/video/all
      parameters:
        - $ref: '#/components/parameters/AccountId'
      responses:
        '200':
          description: A list of videos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoList'
        '403':
          description: Forbidden
        '422':
          description: Invalid query parameters
        '500':
          description: Server error
  '/accounts/{account_id}/videos/history':
    get:
      tags:
        - History
      summary: List the lifetime social history for every video on the account.
      description: >-
        Gets the lifetime history of every video Social has ever attempted to distribute to a social platform.  Note that this endpoint has pagination.
      operationId: getAccountVideosHistory
      security:
        - BC_OAuth2:
          - video-cloud/social/status/read
      parameters:
        - $ref: '#/components/parameters/AccountId'
      responses:
        '200':
          description: A list of videos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoList'
        '403':
          description: Forbidden
        '422':
          description: Invalid query parameters
        '500':
          description: Server error
  '/accounts/{account_id}/videos/{video_id}/history':
    get:
      tags:
        - History
      summary: List the lifetime social history the video.
      description: >-
        Gets the lifetime history of the requested video for every Social Destination is has ever been distributed to.  Note that this endpoint has pagination.
      operationId: getAccountVideoHistory
      security:
        - BC_OAuth2:
          - video-cloud/social/status/read
      parameters:
        - $ref: '#/components/parameters/AccountId'
      responses:
        '200':
          description: A list of videos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoList'
        '403':
          description: Forbidden
        '422':
          description: Invalid query parameters
        '500':
          description: Server error
components:
  schemas:
    Error:
      type: object
      properties:
        error_code:
          type: string
          description: The error code returned recorded by the server, from the social platform, if any.
        error_message:
          type: string
          description: The error message recorded by the server, or returned from the social platform, if any.
        platform_error:
          type: string
          description: JSON representation of the error object returned from the social platform, if any.
    AdConfigList:
      type: array
      description: >-
        Array of ad configuration objects
      items:
        type: object
        properties:
          name:
            type: string
            description: Name of the ad configuration
          vmap_response_namespace:
            type: string
            description: >-
              Adjusts the VMAP output to use the legacy Unicorn Once namespace format or to use the new Brightcove namespace format.
            enum:
              - bc
              - ua
            default: bc
          account_id:
            type: string
            description: The Video Cloud account id
          created_timestamp:
            type: string
            description: Date-time when the ad configuration was created
          updated_timestamp:
            type: string
            description: Date-time when the ad configuration was last updated
          ad_config:
            $ref: '#/components/schemas/AdConfig'
      example: >-
        '[
          {
            "name": "VMAP Ad Server",
            "vmap_response_namespace": "bc",
            "config_id": "2ecc6beb-d6a4-4deb-a78e-37ac27e0f883",
            "account_id": "57838016001",
            "created_timestamp": "2017-07-24T19:28:34.976878586Z",
            "updated_timestamp": "2017-07-24T19:28:34.976878586Z",
            "ad_config": {
              "expected_ad_response": "dfp_ad_rules",
              "disable_server_beacons": false,
              "template_url": {
                  "template": "http://solutions.brightcove.com/bcls/ads/simple-ad-rules?ip={{ system.ip_address }}&vid={{ metadata.video_id }}&ppid={{ system.unique_user_id }}&p_vmap={{ url.p_vmap }}"
              }
            }
          }
        ]'
    AdConfig:
      type: object
      description: Ad config part of an ad configuration object
      properties:
        expected_ad_response:
          type: string
          description: |-
            Which tech to use to parse the response.

            When the `expected_ad_response` is set to `vast_3_0`, SSAI makes one VAST call for each ad cue point defined in Video Cloud. For VMAP and ad rules, SSAI makes requests based on the defined ad breaks in the initial ad response.
          enum:
            - dfp_ad_rules
            - dfp_vmap
            - smart_xml
            - vast_3_0
        disable_server_beacons:
          type: boolean
          description: |-
            Flags whether to disable the server side firing of ad impressions/beacons

            When set to `true`, SSAI will not fire any beacons server-side and will include all beacons in the VMAP output

            When set to `false`, SSAI will fire the beacons it is able to server-side and include any it is not able to in the VMAP output
          default: false
        template_url:
          type: object
          properties:
            template:
              type: string
              description: >-
                Ad tag template. Available variables described in [this document](https://support.brightcove.com/video-cloud-ssai-ad-config-api#Ad_variables).
  parameters:
    AccountId:
      name: account_id
      in: path
      description: ID of the account to query video statuses for
      required: true
      schema:
        type: string
    VideoId:
      name: video_id
      in: path
      description: ID of the video to query video statuses for
      required: true
      schema:
        type: string
    Platform:
      name: platform
      in: query
      description: |-
        Limit the list of videos to a single social platform.  Valid values for this property are
        - YOUTUBE
        - FACEBOOK
        - TWITTER

        Note that this may conflict with `destination_id`, below.
      required: false
      schema:
        type: string
        enum:
          - YOUTUBE
          - FACEBOOK
          - TWITTER
    DestinationId:
      name: destination_id
      in: query
      description: >
        Limit the list of videos to a single Social destination, by it's ID. Note that this may conflict with `platform`, above. (e.g., Specifying `platform=YOUTUBE` and passing the ID of a Twitter destination will result in no statuses.)  Generally if you are passing a `destination_id` you probably don't want to be passing a `platform` as well, as destinations imply a platform.
      required: false
      schema:
        type: string
        format: uuid
    Status:
      name: status
      in: query
      description: >
        Limit the list of videos to those with a specific status.  Valid values for this property are

        - DELETED

        - ERROR

        - HIDDEN

        - PROCESSING

        - PUBLISHED

        - SCHEDULED

        - SYNCED

        - ABANDONED
      schema:
        type: string
    Before:
      name: before
      in: query
      description: >-
        Limit the list of videos to those whose last status change occurred before the specified date time.  Can accept either a full timestamp, or just a datestamp.  If passed just a datestamp, assumes 00:00:00 for the time, and the filter will be exclusive of the date specified.
      required: false
      schema:
        type: string
        format: date-time
    Since:
      name: since
      in: query
      description: >-
        Limit the list of videos to those whose last status change occurred since the specified date time.  Can accept either a full timestamp, or just a datestamp.  If passed just a datestamp, assumes 00:00:00 for the time, and the filter will be inclusive of the date specified.
      required: false
      schema:
        type: string
        format: date-time
    PageKey:
      name: page_key
      in: query
      description: >-
        Fetch the next page of data.  If the previous call to this endpoint returned a `page_key`, a subsequent call can be made with the same parameters and including the `page_key` to retrieve the next page.
      required: false
      schema:
        type: string
    PageSize:
      name: page_size
      in: query
      description: >-
        The number of entries to fetch in the next page of data.  Must be a number between 1 and 100, inclusive.  Defaults to 20.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
    PrettyPrint:
      name: pretty_print
      in: query
      description: >-
        Whether or not to pretty-print the JSON response.  Defaults to false.
      required: false
      schema:
        type: boolean
  securitySchemes:
    BC_OAuth2:
      type: oauth2
      description: >-
        Brightcove OAuth API. See the [support documentation](https://support.brightcove.com/oauth-api) or [Getting Access Tokens](https://support.brightcove.com/oauth-api-sample-get-access-token) to learn more
      flows:
        clientCredentials:
          tokenUrl: 'https://oauth.brightcove.com/v4/access_token'
          scopes:
            video-cloud/social/status/read: Read social sharing status and history
