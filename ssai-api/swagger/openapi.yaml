openapi: '3.0.0'
x-bc-implicit-head: true
x-bc-implicit-options: true
x-bc-upstream: 'http://backend_server'
info:
  description: |-
    API for Brightcove SSAI

    This API is used for managing operations related to Server-Side Ad Insertion (SSAI)

    **Base URL:** https://ssai.api.brightcove.com/v1
  version: 0.1.0
  title: Brightcove SSAI API
  x-bc-access: public
servers:
  - url: 'https://ssai.api.brightcove.com/v1'
    variables: {}
tags:
  - name: Ad Configurations
    description: Operations for managing ad configurations.
paths:
  '/accounts/{account_id}/ssai_configs':
    get:
      tags:
        - Ad Configurations
      summary: List the ad configurations for the account
      description: |-
        List the ad configurations defined for an account.
      operationId: getAdConfigurations
      security:
        - BC_OAuth2:
          - video-cloud/social/video/read
      parameters:
        - $ref: '#/components/parameters/AccountId'
      responses:
        '200':
          description: A list of videos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdConfigList'
        '403':
          description: Forbidden
        '422':
          description: Invalid query parameters
        '500':
          description: Server error
components:
  schemas:
    Error:
      type: object
      properties:
        error_code:
          type: string
          description: The error code returned recorded by the server, from the social platform, if any.
        error_message:
          type: string
          description: The error message recorded by the server, or returned from the social platform, if any.
        platform_error:
          type: string
          description: JSON representation of the error object returned from the social platform, if any.
    AdConfigList:
      title: List Ad Configurations Response
      type: array
      description: >-
        Array of ad configuration objects
      items:
        "$ref": "#/components/schemas/AdConfigurationResponse"
    AdConfigurationResponse:
      title: "Ad Configuration Response"
      type: object
      properties:
        name:
          type: string
          description: Name of the ad configuration
        config_id:
          type: string
          description: System id for this configuration
        description:
          type: string
          description: Description of the ad configuration
        discontinuities:
          $ref: '#/components/schemas/Discontinuities'
        vmap_response_namespace:
          type: string
          description: >-
            Adjusts the VMAP output to use the legacy Unicorn Once namespace format or to use the new Brightcove namespace format.
            enum:
              - bc
              - ua
              default: bc
        account_id:
          type: string
          description: The Video Cloud account id
        created_timestamp:
          type: string
          description: Date-time when the ad configuration was created
        updated_timestamp:
          type: string
          description: Date-time when the ad configuration was last updated
        ad_config:
          $ref: '#/components/schemas/AdConfig'
        beacon_templates:
          type: array
          description: |-
            An array of beacons to fire (example: 3rd-party beacons)
          items:
            $ref: '#/components/schemas/BeaconTemplate'
      example: >-
        '[
          {
            "name": "SSAI VMAP 3",
            "vmap_response_namespace": "bc",
            "config_id": "b8dca8fd-fe17-4d64-af7c-98f71124a11d",
            "account_id": "1752604059001",
            "created_timestamp": "2018-12-10T13:35:34.574824851Z",
            "updated_timestamp": "2018-12-10T13:35:34.574824851Z",
            "description": "Sample ad configuration",
            "ad_config": {
              "enable_ads": true,
              "expected_ad_response": "dfp_vmap",
              "disable_server_beacons": false,
              "round_up_cue_points": false,
              "template_url": {
                "template": "http://solutions.brightcove.com/bcls/brightcove-player/vmap/simple-vmap.xml"
              }
            },
            "beacon_templates": [
              {
                "type": "content_start",
                "template_url": null
              },
              {
                "type": "content_midpoint",
                "template_url": null
              },
              {
                "type": "ad_start",
                "template_url": null
              },
              {
                "type": "content_complete",
                "template_url": null
              }
            ],
            "discontinuities": {
              "dash": [
                "*"
              ],
              "hls": [
                "*"
              ]
              },
            "extend_beacon_guard_ttl": true
          }
        ]'
    AdConfig:
      title: ad_config
      type: object
      description: Ad config part of an ad configuration object
      properties:
        expected_ad_response:
          type: string
          description: |-
            Which tech to use to parse the response.

            When the `expected_ad_response` is set to `vast_3_0`, SSAI makes one VAST call for each ad cue point defined in Video Cloud. For VMAP and ad rules, SSAI makes requests based on the defined ad breaks in the initial ad response.
          enum:
            - dfp_ad_rules
            - dfp_vmap
            - smart_xml
            - vast_3_0
        disable_server_beacons:
          type: boolean
          description: |-
            Flags whether to disable the server side firing of ad impressions/beacons

            When set to `true`, SSAI will not fire any beacons server-side and will include all beacons in the VMAP output

            When set to `false`, SSAI will fire the beacons it is able to server-side and include any it is not able to in the VMAP output
          default: false
        template_url:
          type: object
          properties:
            template:
              type: string
              description: >-
                Ad tag template. Available variables described in [this document](https://support.brightcove.com/video-cloud-ssai-ad-config-api#Ad_variables).
    BeaconTemplate:
      title: Beacon Template
      type: object
    Discontinuities:
      type: object
      description: |-
        Controls the versions of DASH to deliver Multi Period manifests or versions of HLS to deliver with discontinuities
      properties:
        dash:
          type: array
          description: |-
            Controls which versions of dash to deliver Multi Period Dash manifests.

            Set to ["*"] to deliver multi-period dash for all versions

            Empty list for never

            Example: ["live-timeline"] to deliver for live-timeline but not for hbbtv
          example:
            ["live-timeline"]
        hls:
          type: array
          description: |-
            Controls which versions of hls to deliver with discontinuities.

            Set to ["*"] to delivery with discontinuities in all versions of HLS

            Empty list for never

            Example: ["v4","v5"] to deliver for v4 & v5 but not for v3
          example:
            ["v4","v5"]
  parameters:
    AccountId:
      name: account_id
      in: path
      description: ID of the account to query video statuses for
      required: true
      schema:
        type: string
    VideoId:
      name: video_id
      in: path
      description: ID of the video to query video statuses for
      required: true
      schema:
        type: string
  securitySchemes:
    BC_OAuth2:
      type: oauth2
      description: >-
        Brightcove OAuth API. See the [support documentation](https://support.brightcove.com/oauth-api) or [Getting Access Tokens](https://support.brightcove.com/oauth-api-sample-get-access-token) to learn more
      flows:
        clientCredentials:
          tokenUrl: 'https://oauth.brightcove.com/v4/access_token'
          scopes:
            video-cloud/video/read: Read video metadata
            video-cloud/video/all: Read and write video metadata
