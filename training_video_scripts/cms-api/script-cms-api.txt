[intro on camera]
Hi, I'm Matt Boles, a learning specialist with Brightcove. In this video, you will learn about Video Cloud's CMS API:
*what it is
*and why you would want use it.

More specifically, we will start by gaining an understanding of what functionality the CMS API provides. We will also see common use cases for the API.

Then, we will move on and view a few samples. The samples demonstrate the usefulness and flexibility of the API.

Lastly, we will take a quick tour of the CMS API documentation index page so you can see available resources.

Let's get started with this short introduction.



[slide 1]
The CMS API provides general management of your Video Cloud videos and playlists, including assets associated with videos like images and audio tracks. The API provides functionality to perform the following tasks on videos and playlists:
*Create videos and playlists
*Update videos and playlists
*Delete videos and playlists
*List videos and playlists, and videos in a specified playlist
*Counts of video and playlists
*Search and sort (videos only)



[slide 2]
The CMS API provides a server side, REST-based API to **programmatically** accomplish the tasks just mentioned.

On read type requests, the API provides uncached access to the video and playlist information. By contrast, the Playback API provides cached access to a limited set of data the CMS API manages.

Another way to gain an insight into the CMS API, is to understand that Studio's MEDIA module is a GUI to the API's functionality. Everything done in the MEDIA module invokes calls to the CMS API.



[slide 3]
####ROBERT, just FYI, only the * items will be on the slide, the sub-bullets are dialog I will read####
Some of the most typical use cases for the CMS API are:
*Generate reports on all or a set of videos
  -For instance, returning a list of videos that were created in a specified time period
*Generate an Media RSS, or MRSS, feed
  -We in Brightcove Learning Services have found customers often like to distribute their video information via MRSS feeds
*Automate video updates
  -For instance you may wish to add a tag to all videos that match a certain criteria
*Integrate with the Analytics API for more complex reports
  -An example for this use case is to get the most viewed videos for a certain time period via the Analytics API, then use the CMS API to get the actual video objects and display them as a playlist in the player
  ####MATT I think this last thing is probably done better with the playback api - that's why I pointed to that other sample that uses the APIs together to help identify and weed out videos that no one is watching anymore


[Viewing doc CMS API Sample: Video Report Generator]
Here is a sample that uses the CMS API to retrieve a specified number of videos that have certain tag associated with them.

Let's look for videos that have the tag "bird" associated with them.

And let's get back the first 25 videos found.

I'll click the "Generate the Report" button.

We see the API at work, then the data is returned in comma separate value format.
####MATT you may want to clarify in this one that the CMS API does NOT return CSV data, but it's pretty easy to convert the data into CSV, as I do in this sample


*I'll copy the data
*Switch to a spreadsheet
*Paste the data
*Select "DATA then Split text to columns"

And we see 25 video objects returned, with the fields shown at the top of the columns.


[Viewing doc CMS API Sample: MRSS Generator]
This sample shows an MRSS feed being generated. It is part CMS API getting the appropriate data, and then a large part manipulating the data into the correct format.

We will use all the defaults, and click the "Generate the Feed" button.

We see the API at work, then the XML data that is an MRSS feed.



[View doc Analytics/CMS APIs Sample: Identifying Low-Performing Content]
The last sample we will look at identifies videos that are seldom watched.

Note that you can choose not to include recently created videos, and also set the threshold that defines for you low-performing.

I'll click the "Generate the Report" button.

We see the actual API requests, first the CMS API, then to the Analytics API.

Eventually we see the returned data, by default in JSON format. Note that in this sample you can convert the returned data to CSV for use in a spreadsheet.



[go to CMS API landing page https://support.brightcove.com/CMS-api from support.brightcove.com]

The last section of this video will be looking over the documentation available for the CMS API. This documentation can be found from the Brightcove Support site home page. To get to the API's landing page, click the quick link for the CMS API.

Here we see a list of all the CMS API documentation, including an overview, and quick start to help you get started using the API. You also see a set of references, informational documents, and finally samples of using the API alone, and solutions using the CMS API with other Brightcove technologies.

By the way, the Video Report Generator and MRSS Generator shown earlier are in the Code Samples group, and the Identifying Low-Performing Content app is in the Code Solutions group.

By the way, the CMS API is one of several platform APIs. If you are an API developer, be sure to check out the other Brightcove APIs that are available.

That's it for this introduction to the CMS API, thanks for watching!
