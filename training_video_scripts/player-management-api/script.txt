[intro]
Hi, I'm Matt Boles, a learning specialist at Brightcove. In this video, you will learn about the Player Management API:
*what it is
*and why you would want use it.

Let's get started with this short introduction.



[slide 1]
First, let's understand what we mean by player management in general. By this phrase we mean tasks you might need to perform on Brightcove Players, for instance:
*create
*delete
*update (change configuration)
*list
*publish

It is very possible you currently use Studio for these tasks.



[slide 2]
Next, we want to understand what the Player Management **API** is. It provides a server side, REST-based API to **programmatically** accomplish the tasks just mentioned. In our documentation, and in this video, we will use cURL and JavaScript to demonstrate the programmatic use of the API.

Another way to gain an insight into the Player Management API is to understand that Studio's PLAYERS module is a GUI to the API's functionality. Everything done in the PLAYERS module invokes calls to the Player Management API.



[slide 3]
Now we have some idea about what the Player Management API is, the next question is why would I want to use it? Let's look at a few examples of the API's use. In this video you will see examples for the following:
*Create a player using cURL
*Update a player using cURL
*Update multiple players using JavaScript



[Terminal with cURL player creation code ready to go]
The first demo is a good introductory management task, that is creating a player. Since this is a REST-based API we will use the HTTP POST method to perform the creation. You can use either curl, or a tool like Insomnia or Postman to help with the task. By the way, we have documentation on using both Insomnia and Postman.

I'm not going to go into detail discussing the cURL statement, but more demo its use. You can read the Quick Start: Player Management API document for a discussion of the code.

I will press Enter and provide my password to execute the cURL statement. You see the API returned information about the newly created player. I'll copy the returned data and format is nicely so we can see what exactly came back.

There, we see in fact it is player information.



[Terminal with cURL player update code ready to go]
Obviously, you can create players in Studio, and also configure the player. On rare occasions Studio may not provide the UI for a certain player configuration, in which case you will have to use the Player Management API to configure the player.

Here is a cURL statement to update a specific player. It doesn't really matter what the configuration change is, as this demo is simply to show you it is possible. Just as in the last demo I will press Enter and provide my password and I get JSON information back. Again, let's get a cleaner look at the returned data. There is information about the player we just updated. Note that you would still have to publish the updated player, which you could do in either Studio or with another cURL statement.



[CodePen with JavaScript open that updates multiple players]
Our last demo will update multiple players. This again is something that could be done in Studio, but it could be a lengthy process if you have numerous players. The basic flow of the app does this:
1. Retrieves a set of players matching some criteria. In this case it filters players that have a specific description, but the filter criteria could be about anything.
2. Each player is updated according to configuration needs.
3. Each updated player is published.

Remember, this is all done programmatically and will take nearly the same amount of time if you are updating one player or 100.

When this runs there is no output to the HTML page, but console.log statements I have put in do give a clue as to what is happening.






[show Player Management API landing page]
https://support.brightcove.com/Player Management-api
The documentation for the Player Management API can be found on the Brightcove Support site.
From the documentation home page, select the quick link for the Player Management API.

On the Player Management API landing page, you will find documentation, including an overview, a quick start, and a guide for how to get the Player Management Key from a player in your Brightcove account.
There is also a complete reference for the API.

Let's look at the Player Management Keys from players document.
[Player Management Keys]
https://support.brightcove.com/Player Management-keys
Because a Player Management Key is automatically generated when you create a Brightcove Player, you can get the key from the player configuration details.
Keep in mind that Player Management Keys automatically generated for new Brightcove Players are not search-enabled.

[return to Player Management API landing page]
Now, let's look at the Quick Start for the Player Management API.

[Quick Start Player Management API]
https://support.brightcove.com/quick-start-Player Management-api
The Quick Start includes a section that explains how to get your credentials needed for accessing the Player Management API.
There is also a sample app for creating a simple Player Management Key.
You can provide your information for Account Id, Client Id and Client Secret, and then create a Player Management Key for your account.

Remember, to perform video searches from the Playback API, you will need a search-enabled Player Management Key.

I am leaving the default input values and selecting the Create the Player Management Key button.
Here, we can see that a new Player Management Key has been created in the Brightcove sample account.

For more details, refer to the Brightcove support documents.
Now, you are ready to experiment on your own with the Player Management API.


By the way, the Player Management API is one of several platform APIs. If you are an API developer, be sure to check out the other Brightcove APIs that are available to you.
