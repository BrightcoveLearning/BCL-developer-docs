[intro on camera]
Hi, I'm Matt Boles, a learning specialist with Brightcove. In this video, you will learn about the Player Management API:
*what it is
*and why you would want use it.

Let's get started with this short introduction.




[slide 1]
First, we need to understand what is meant by player management in general. By this phrase we mean tasks one might need to perform on Brightcove Players, for instance:
*create
*delete
*update (change configuration)
*list
*publish

It is very possible you currently use Studio for these tasks. In this video we will see why you might want to use the Player Management API instead.




[slide 2]
Next, we need to understand what the Player Management **API** is. It provides a server side, REST-based API to **programmatically** accomplish the tasks just mentioned. In the Brightcove documentation, and in this video, we will use cURL and JavaScript to demonstrate the programmatic use of the API.

Another way to gain an insight into the Player Management API, is to understand that Studio's PLAYERS module is a GUI to the API's functionality. Everything done in the PLAYERS module invokes calls to the Player Management API.



[slide 3]
Now that we have some idea about what the Player Management API is, the next question is why would we want to use it? Let's look at a couple of examples that demonstrate the API's use. Next in this video we will see examples for the following:
*Update a player's configuration using cURL
*Update multiple players' configurations using JavaScript

By the way,both of these demos have corresponding documents that detail what is happening. We will look around the documentation later in this video.



[Terminal with cURL player update code ready to go]
Obviously, we can create players in Studio, and also configure players. On rare occasions Studio may not provide the UI for a certain player configuration, in which case we will have to use the Player Management API to configure the player. The example shown here alters the menu that appears when one right-clicks on the player. This is not something editable in Studio.

You see a cURL statement in Terminal which uses the HTTP PATCH method to update a specific player. I will press Enter and provide my password and JSON information is returned. Let's get a cleaner look at the returned data by formatting it. We see information about the player just updated. Note that we would still have to publish the updated player, which can be done either in Studio or with another cURL statement.



[CodePen with JavaScript open that updates multiple players]
The next demo will update multiple players using JavaScript in conjunction with the Player Management API. Again, this could be done in Studio, but it could be a lengthy process if there are numerous players. The basic flow of the app does this:
1. Retrieves a set of players matching some criteria. In the example we will soon see it filters players that have a specific description, but the filter criteria could be just about anything.
2. In a loop, each filtered player is updated according to configuration requirements.
3. Once we are sure all updates are done, in a loop each updated player is published.

Remember, this is all done programmatically and will take nearly the same amount of time if we are updating one player or 100. Also, each of the three steps uses the Player Management API.

Here is a CodePen that executes the app. By default, nothing is displayed on the screen, but I have added some code to provide an insight into what is occurring. For demo purposes the filter applied retrieves only two players. For each of the two players we see the data passed into the Player Management API and the response from the API.




[go to Player Management API landing page https://support.brightcove.com/player-management-api from support.brightcove.com]

The last section of this video will be looking over the documentation available for the Player Management API. This documentation can be found from the Brightcove Support site home page. To get to the API's landing page, click the quick link for the Player Management API.

Here we see a list of all the Player Management API documentation, including an overview, a quick start to help you get started using the API, and the complete API reference. Both demos that were shown in this video have corresponding documents here. Updating a single player is part of the quick start, and there is an entire document dedicated to updating multiple players.

By the way, the Player Management API is one of several platform APIs. If you are an API developer, be sure to check out the other Brightcove APIs that are available.

That's it for this introduction to the Player Management API, thanks for watching!